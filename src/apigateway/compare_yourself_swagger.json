{
  "swagger" : "2.0",
  "info" : {
    "version" : "2021-01-01T20:19:17Z",
    "title" : "compare-yourself"
  },
  "host" : "8dqz0v87p3.execute-api.us-east-2.amazonaws.com",
  "basePath" : "/dev",
  "schemes" : [ "https" ],
  "paths" : {
    "/compare-yourself" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CompareData",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CompareData"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "compare-yourself-cognito-authorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:336249122316:function:compare-yourself-store-data/invocations",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "{\n\"body-json\" : $input.json('$')\n}\n"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "#set($inputRoot = $input.path('$'))\n{\n  ## all properties must be strings for dynamo \n  ## not sure I like doing the conversion here and \n  ## would probably do it in JS code because it's specific to \n  ## lambda/dynamo. \n  \n  ## this is for authorizer backed by lambda function\n  ##\"userid\": \"$context.authorizer.principalId\",\n  ## this is for authorizer backed by cognito user pool\n  \"userid\": \"$context.authorizer.claims.sub\",\n  \"age\" : \"$inputRoot.age\",\n  \"height\": \"$inputRoot.height\",\n  \"income\": \"$inputRoot.income\"\n}"
          },
          "passthroughBehavior" : "when_no_templates",
          "httpMethod" : "POST",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "aws"
        }
      },
      "delete" : {
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "compare-yourself-cognito-authorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:336249122316:function:compare-yourself-delete-data/invocations",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "passthroughBehavior" : "when_no_match",
          "httpMethod" : "POST",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "aws"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'DELETE,OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{\"statusCode\": 200}"
          },
          "passthroughBehavior" : "when_no_match",
          "type" : "mock"
        }
      }
    },
    "/compare-yourself/{type}" : {
      "get" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "compare-yourself-cognito-authorizer" : [ ]
        } ],
        "x-amazon-apigateway-integration" : {
          "uri" : "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:336249122316:function:compare-yourself-get-data/invocations",
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              },
              "responseTemplates" : {
                "application/json" : "#set($inputRoot = $input.path('$'))\n[\n#foreach($elem in $inputRoot)\n {\n  \"age\" : $elem.age,\n  \"height\" : $elem.height,\n  \"income\" : $elem.income\n} \n#if($foreach.hasNext),#end\n#end\n]"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{\n   ## quote the value to send as a string \n  \"type\": \"$input.params('type')\"\n}"
          },
          "passthroughBehavior" : "when_no_templates",
          "httpMethod" : "POST",
          "contentHandling" : "CONVERT_TO_TEXT",
          "type" : "aws"
        }
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/Empty"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration" : {
          "responses" : {
            "default" : {
              "statusCode" : "200",
              "responseParameters" : {
                "method.response.header.Access-Control-Allow-Methods" : "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            }
          },
          "requestTemplates" : {
            "application/json" : "{\"statusCode\": 200}"
          },
          "passthroughBehavior" : "when_no_match",
          "type" : "mock"
        }
      }
    }
  },
  "securityDefinitions" : {
    "compare-yourself-cognito-authorizer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "cognito_user_pools",
      "x-amazon-apigateway-authorizer" : {
        "providerARNs" : [ "arn:aws:cognito-idp:us-east-2:336249122316:userpool/us-east-2_01b2WwYNg" ],
        "type" : "cognito_user_pools"
      }
    }
  },
  "definitions" : {
    "CompareData" : {
      "type" : "object",
      "required" : [ "age", "height", "income" ],
      "properties" : {
        "age" : {
          "type" : "integer"
        },
        "height" : {
          "type" : "integer"
        },
        "income" : {
          "type" : "integer"
        }
      },
      "title" : "CompareData"
    },
    "Empty" : {
      "type" : "object",
      "title" : "Empty Schema"
    }
  }
}